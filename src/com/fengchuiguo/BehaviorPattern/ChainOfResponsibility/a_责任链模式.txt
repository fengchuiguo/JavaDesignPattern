责任链模式，
有多个对象，每个对象持有对下一个对象的引用，这样就会形成一条链，请求在这条链上传递，直到某一对象决定处理该请求。
但是发出者并不清楚到底最终那个对象会处理该请求，所以，责任链模式可以实现，在隐瞒客户端的情况下，对系统进行动态的调整。

强调一点就是，链接上的请求可以是一条链，可以是一个树，还可以是一个环，模式本身不约束这个，需要我们自己去实现，
同时，在一个时刻，命令只允许由一个对象传给另一个对象，而不允许传给多个对象。

责任链模式：将接收者对象连城一条链，并在该链上传递请求，直到有一个接收者对象处理它。
通过让更多对象有机会处理请求，避免了请求的发送者和接收者直接的耦合。

COR应用实例：
后端：Java中的异常处理；
前端：JavaScript Event Model；
Java Web：FilterChain in Web（不纯的COR）


缺点：消耗更多时间，耗内存，会被被观察者模式取代。